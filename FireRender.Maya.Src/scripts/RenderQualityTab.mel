//
// Copyright 2020 Advanced Micro Devices, Inc
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//    http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

proc int isWindowsRunning()
{
	return `about -windows`;
}

proc createFinalRenderQualityPart()
{
	// Render Resources section
	//
	if (isWindowsRunning())
	{
		frameLayout -label "Final Render Quality" -cll true -cl 0 fireRenderQualityFrame;
		attrControlGrp
			-label "Render Quality"
			-attribute "RadeonProRenderGlobals.renderQualityFinalRender";
		setParent ..;
	}


	frameLayout -label "Final Render Ray Depths" -cll true -cl 0 fireRenderRayDepthsFrame;

	// Trace depth
	attrControlGrp
		 -label "Max Ray Depth"
		 -attribute "RadeonProRenderGlobals.maxRayDepth";

	attrControlGrp
		 -label "Max Diffuse"
		 -attribute "RadeonProRenderGlobals.maxDepthDiffuse";

	attrControlGrp
		 -label "Max Glossy"
		 -attribute "RadeonProRenderGlobals.maxDepthGlossy";

	attrControlGrp
		 -label "Max Refraction"
		 -attribute "RadeonProRenderGlobals.maxDepthRefraction";

	attrControlGrp
		 -label "Max Glossy Refraction"
		 -attribute "RadeonProRenderGlobals.maxDepthRefractionGlossy";

	attrControlGrp
		 -label "Max Shadow"
		 -attribute "RadeonProRenderGlobals.maxDepthShadow";

	setParent ..;

	// Advanced settings section
	frameLayout -label "Final Render Advanced Settings" -cll true -cl 0 fireRenderQualityAdvancedFrame;

	attrControlGrp
		-label "Ray Epsilon(mm)"
		-attribute "RadeonProRenderGlobals.raycastEpsilon";

        attrControlGrp
            -label "Enable Out of Core Textures"
            -attribute "RadeonProRenderGlobals.enableOOC"
            -cc updateOOCUIProduction;

        attrControlGrp
            -label "GPU Texture Cache (MB)"
            -attribute "RadeonProRenderGlobals.textureCacheSize"
            textureCacheSize;

	// Clamp irradiance
	attrControlGrp
		 -label "Clamp Irradiance"
		 -attribute "RadeonProRenderGlobals.giClampIrradiance";

	// Clamp irradiance value
	attrControlGrp
		 -label "Clamp Irradiance Value"
		 -attribute "RadeonProRenderGlobals.giClampIrradianceValue";

	attrControlGrp
		 -label "Texture Compression"
		 -attribute "RadeonProRenderGlobals.textureCompression";

	setParent ..;
}

proc createViewportRenderQualityPart()
{
	if (isWindowsRunning())
	{
		frameLayout -label "Viewport Render Quality" -cll true -cl 0 fireRenderViewportQualityFrame;
		attrControlGrp
			 -label "Render Quality"
			 -attribute "RadeonProRenderGlobals.renderQualityViewport";
		setParent ..;
	}

	frameLayout -label "Viewport Ray Depths" -cll true -cl 0 fireRenderViewportRayDepthFrame;
	    attrControlGrp
	        -label "Max Ray Depth"
	        -attribute "RadeonProRenderGlobals.maxRayDepthViewport";

	    attrControlGrp
	        -label "Max Diffuse Ray Depth"
	        -attribute "RadeonProRenderGlobals.maxDepthDiffuseViewport";

	    attrControlGrp
	        -label "Max Reflection Ray Depth"
	        -attribute "RadeonProRenderGlobals.maxDepthGlossyViewport";
	setParent ..;
}

global proc createQualityTab()
{
	string $parentForm = `setParent -query`;
	scrollLayout -w 375 -horizontalScrollBarThickness 0 fireRenderQualityScrollLayout;
	columnLayout -w 375 -adjustableColumn true fireRenderTabColumn;

	frameLayout -label "Engine:" -cll true -cl 0 fireRenderTahoeEngineFrame;
		attrControlGrp
		    -label "Render Engine:"
		     -attribute "RadeonProRenderGlobals.tahoeVersion";
	setParent ..;



        createFinalRenderQualityPart();
	createViewportRenderQualityPart();

	formLayout
		-edit
		-af fireRenderQualityScrollLayout "top" 0
		-af fireRenderQualityScrollLayout "bottom" 0
		-af fireRenderQualityScrollLayout "left" 0
		-af fireRenderQualityScrollLayout "right" 0
		$parentForm;

        updateOOCUIProduction();
}

global proc updateOOCUIProduction()
{
	int $enabled = `getAttr RadeonProRenderGlobals.enableOOC`;

	// Lock controls and set it to ON state
	control -edit -enable ($enabled > 0) textureCacheSize;
}

global proc updateQualityTab()
{

}